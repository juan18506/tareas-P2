1,55c1,18
< 1>2>#  arbol vacio crea lista vacia.
< 3>4>5>6>7>8>9>10>#  arbol con 1 elemento, es perfecto.
< 11>El árbol de personas es perfecto.
< 12>#  lista con 1 solo elemento - Persona 5.
< 13>Persona 5:  Persona5, 55 años
< Evento 5:  Descripcion5
< Fecha: 5/55/55
< 14>15>16>17>18>19>20>21>22>23>24>25>26>27>28>29>30>31>32>#  lista con 4 elementos.
< 33>Persona 2:  Persona2, 22 años
< Evento 2:  Descripcion2
< Fecha: 2/2/22
< Persona 5:  Persona5, 55 años
< Evento 5:  Descripcion5
< Fecha: 5/55/55
< Persona 10:  Persona10, 100 años
< Evento 10:  Descripcion10
< Fecha: 10/1/10
< Persona 20:  Persona20, 200 años
< Evento 20:  Descripcion20
< Fecha: 7/12/23
< 34>35>36>37>38>39>40>#  arbol de altura 3.
< 41>La altura del árbol de personas es: 3.
< 42>#  remuevo la raiz, queda el 2 de raiz.
< 43>44>#  arbol de altura 3.
< 45>La altura del árbol de personas es: 3.
< 46>#  arbol solo con subarbol derecho, no es perfecto.
< 47>El árbol de personas NO es perfecto.
< 48>#  remuevo la raiz, me quedo con subarbol derecho.
< 49>50>#  arbol con 3 elementos.
< 51>La cantidad de personas en el árbol es: 3.
< 52>#  lista con 3 elementos.
< 53>Persona 7:  Persona7, 77 años
< Evento 7:  Descripcion7
< Fecha: 7/7/7
< Persona 10:  Persona10, 100 años
< Evento 10:  Descripcion10
< Fecha: 10/1/10
< Persona 20:  Persona20, 200 años
< Evento 20:  Descripcion20
< Fecha: 7/12/23
< 54>#  arbol perfecto.
< 55>El árbol de personas es perfecto.
< 56>57>58>59>60>61>62>#  lista con 5 elementos.
< 63>Persona 1:  Persona1, 11 años
< Persona 3:  Persona3, 33 años
< Persona 7:  Persona7, 77 años
< Evento 7:  Descripcion7
< Fecha: 7/7/7
< Persona 10:  Persona10, 100 años
< Evento 10:  Descripcion10
< Fecha: 10/1/10
< Persona 20:  Persona20, 200 años
< Evento 20:  Descripcion20
< Fecha: 7/12/23
< 64>65>Fin.
---
> ==27233== Invalid read of size 8
> ==27233==    at 0x404473: imprimirTPersonasLDE(rep_personasLDE*) (personasLDE.cpp:90)
> ==27233==    by 0x4032D6: main_aplanarArbolPersonas(rep_personasAbb*&) (principal.cpp:820)
> ==27233==    by 0x401CAA: main (principal.cpp:357)
> ==27233==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
> ==27233== 
> ==27233== 
> ==27233== Process terminating with default action of signal 11 (SIGSEGV): dumping core
> ==27233==  Access not within mapped region at address 0x0
> ==27233==    at 0x404473: imprimirTPersonasLDE(rep_personasLDE*) (personasLDE.cpp:90)
> ==27233==    by 0x4032D6: main_aplanarArbolPersonas(rep_personasAbb*&) (principal.cpp:820)
> ==27233==    by 0x401CAA: main (principal.cpp:357)
> ==27233==  If you believe this happened as a result of a stack
> ==27233==  overflow in your program's main thread (unlikely but
> ==27233==  possible), you can try to increase the size of the
> ==27233==  main thread stack using the --main-stacksize= flag.
> ==27233==  The main thread stack size used in this run was 8388608.
> timeout: la orden monitorizada ha volcado un 'core'
